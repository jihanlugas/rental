definitions:
  model.CalendarView:
    properties:
      companyId:
        type: string
      createBy:
        type: string
      createDt:
        type: string
      createName:
        type: string
      deleteBy:
        type: string
      deleteDt:
        type: string
      deleteName:
        type: string
      endDt:
        type: string
      id:
        type: string
      name:
        type: string
      propertyId:
        type: string
      startDt:
        type: string
      updateBy:
        type: string
      updateDt:
        type: string
      updateName:
        type: string
    type: object
  model.PropertyView:
    properties:
      companyId:
        type: string
      createBy:
        type: string
      createDt:
        type: string
      createName:
        type: string
      deleteBy:
        type: string
      deleteDt:
        type: string
      deleteName:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updateBy:
        type: string
      updateDt:
        type: string
      updateName:
        type: string
    type: object
  request.CreateCalendar:
    properties:
      endDt:
        type: string
      name:
        type: string
      propertyId:
        type: string
      startDt:
        type: string
    required:
    - endDt
    - name
    - propertyId
    - startDt
    type: object
  request.CreateCompany:
    properties:
      name:
        type: string
      userId:
        type: string
    required:
    - name
    - userId
    type: object
  request.CreateProperty:
    properties:
      descriptionId:
        type: string
      name:
        type: string
    required:
    - descriptionId
    - name
    type: object
  request.Signin:
    properties:
      passwd:
        maxLength: 200
        type: string
      username:
        type: string
    required:
    - passwd
    - username
    type: object
  request.Timeline:
    properties:
      companyId:
        type: string
      endDt:
        type: string
      startDt:
        type: string
    required:
    - companyId
    - endDt
    - startDt
    type: object
  request.UpdateCalendar:
    properties:
      endDt:
        type: string
      name:
        type: string
      propertyId:
        type: string
      startDt:
        type: string
    required:
    - endDt
    - name
    - propertyId
    - startDt
    type: object
  request.UpdateCompany:
    properties:
      name:
        type: string
      userId:
        type: string
    required:
    - name
    - userId
    type: object
  request.UpdateProperty:
    properties:
      descriptionId:
        type: string
      name:
        type: string
    required:
    - descriptionId
    - name
    type: object
  response.Response:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        type: object
      status:
        type: boolean
    type: object
  response.Timeline:
    properties:
      calendars:
        items:
          $ref: '#/definitions/model.CalendarView'
        type: array
      properties:
        items:
          $ref: '#/definitions/model.PropertyView'
        type: array
    type: object
host: localhost:1323
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Rental App
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ようこそ、美しい世界へ
          schema:
            type: string
      summary: Ping
      tags:
      - Ping
  /calendar:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateCalendar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: To do create new election
      tags:
      - Calendar
  /calendar/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Calendar ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Delete Calendar
      tags:
      - Calendar
    get:
      consumes:
      - application/json
      parameters:
      - description: Calendar ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: To do get a user
      tags:
      - Calendar
    put:
      consumes:
      - application/json
      parameters:
      - description: Calendar ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCalendar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: To do update a calendar
      tags:
      - Calendar
  /calendar/timeline:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.Timeline'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                payload:
                  $ref: '#/definitions/response.Timeline'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: To do create new election
      tags:
      - Calendar
  /company:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateCompany'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: To do create new election
      tags:
      - Company
  /company/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Delete Company
      tags:
      - Company
    get:
      consumes:
      - application/json
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: To do get a user
      tags:
      - Company
    put:
      consumes:
      - application/json
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCompany'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: To do update a company
      tags:
      - Company
  /property:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateProperty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: To do create new election
      tags:
      - Property
  /property/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Delete Property
      tags:
      - Property
    get:
      consumes:
      - application/json
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: To do get a user
      tags:
      - Property
    put:
      consumes:
      - application/json
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProperty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: To do update a property
      tags:
      - Property
  /sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.Signin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Sign in a user
      tags:
      - Authentication
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
